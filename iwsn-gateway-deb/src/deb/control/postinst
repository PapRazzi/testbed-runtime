#!/bin/sh

USER=[[project.systemUser]]
GROUP=[[project.systemGroup]]

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
  configure)
  
  	# Create User and a Group with the same name as the User
    if ! getent passwd $USER >/dev/null; then
		adduser --disabled-password --quiet --system --home /var/run/$USER --gecos "${USER} daemon" --group $USER
    fi
    
	# Add the additional group GROUP unless it's already there
    if ! getent group $GROUP >/dev/null; then
		addgroup --quiet --system $GROUP || true
    fi
    
 	# 6. Add the user to the GROUP group
	if test -n $GROUP
	then
		adduser $USER $GROUP || true
	fi

	# Add the user to the GROUP 'dialout' so he can connect to serial devices
	if test -n dialout
	then
		adduser $USER dialout || true
	fi
	
	# add daemon to runlevel specified in its header
	update-rc.d [[project.pathName]] defaults || true

  ;;
  abort-upgrade|abort-remove|abort-deconfigure)
  ;;
  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac
