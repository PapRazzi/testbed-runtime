SET storage_engine=INNODB;

DROP TABLE IF EXISTS ACTIONS;
DROP TABLE IF EXISTS PERMISSIONS;
DROP TABLE IF EXISTS RESOURCEGROUPS;
DROP TABLE IF EXISTS ROLES;
DROP TABLE IF EXISTS URN_RESOURCEGROUPS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS USERS_ROLES;

CREATE TABLE ACTIONS ( NAME VARCHAR(30) NOT NULL, PRIMARY KEY (NAME) ) ;
CREATE TABLE PERMISSIONS ( ROLE_NAME VARCHAR(150) NOT NULL, ACTION_NAME VARCHAR(30) NOT NULL, RESOURCEGROUP_NAME VARCHAR(40), PRIMARY KEY(ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) ) ;
CREATE TABLE RESOURCEGROUPS ( NAME VARCHAR(40) NOT NULL, PRIMARY KEY (NAME) ) ;
CREATE TABLE ROLES ( NAME VARCHAR(150) NOT NULL, PRIMARY KEY (NAME) ) ;
CREATE TABLE URN_RESOURCEGROUPS ( URN VARCHAR(255) NOT NULL, RESOURCEGROUP VARCHAR(40) NOT NULL, PRIMARY KEY (URN, RESOURCEGROUP) ) ;
CREATE TABLE USERS ( EMAIL VARCHAR(150) NOT NULL, PASSWORD VARCHAR(1500), SALT VARCHAR(1500), PRIMARY KEY (EMAIL) ) ;
CREATE TABLE USERS_ROLES ( ROLE_NAME VARCHAR(150) NOT NULL, USER_EMAIL VARCHAR(150) NOT NULL, PRIMARY KEY (ROLE_NAME, USER_EMAIL) ) ;

insert into ACTIONS (NAME) values ('RS_DELETE_RESERVATION');
insert into ACTIONS (NAME) values ('RS_GET_RESERVATIONS');
insert into ACTIONS (NAME) values ('RS_MAKE_RESERVATION');
insert into ACTIONS (NAME) values ('SM_ARE_NODES_ALIVE');
insert into ACTIONS (NAME) values ('SM_FREE');
insert into ACTIONS (NAME) values ('WSN_ARE_NODES_ALIVE');
insert into ACTIONS (NAME) values ('WSN_DESTROY_VIRTUAL_LINK');
insert into ACTIONS (NAME) values ('WSN_DISABLE_NODE');
insert into ACTIONS (NAME) values ('WSN_DISABLE_PHYSICAL_LINK');
insert into ACTIONS (NAME) values ('WSN_ENABLE_NODE');
insert into ACTIONS (NAME) values ('WSN_ENABLE_PHYSICAL_LINK');
insert into ACTIONS (NAME) values ('WSN_FLASH_PROGRAMS');
insert into ACTIONS (NAME) values ('WSN_RESET_NODES');
insert into ACTIONS (NAME) values ('WSN_SEND');
insert into ACTIONS (NAME) values ('WSN_SET_CHANNEL_PIPELINE');
insert into ACTIONS (NAME) values ('WSN_SET_VIRTUAL_LINK');
insert into ACTIONS (NAME) values ('WSN_SUBSCRIBE');
insert into ACTIONS (NAME) values ('*');

insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('ADMINISTRATOR', '*', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('ADMINISTRATOR', '*', 'SERVICE_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('ADMINISTRATOR', '*', 'SERVICE_AND_EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'RS_DELETE_RESERVATION', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'RS_GET_RESERVATIONS', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'RS_MAKE_RESERVATION', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'SM_ARE_NODES_ALIVE', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'SM_FREE', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_ARE_NODES_ALIVE', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_DESTROY_VIRTUAL_LINK', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_DISABLE_NODE', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_DISABLE_PHYSICAL_LINK', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_ENABLE_NODE', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_ENABLE_PHYSICAL_LINK', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_FLASH_PROGRAMS', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_RESET_NODES', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_SEND', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_SET_CHANNEL_PIPELINE', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_SET_VIRTUAL_LINK', 'EXPERIMENT_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'RS_DELETE_RESERVATION', 'SERVICE_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'RS_MAKE_RESERVATION', 'SERVICE_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'SM_ARE_NODES_ALIVE', 'SERVICE_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_ARE_NODES_ALIVE', 'SERVICE_ONLY_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_SEND', 'SERVICE_ONLY_NODES');

insert into RESOURCEGROUPS (NAME) values ('EXPERIMENT_ONLY_NODES');
insert into RESOURCEGROUPS (NAME) values ('SERVICE_ONLY_NODES');
insert into RESOURCEGROUPS (NAME) values ('SERVICE_AND_EXPERIMENT_NODES');

insert into ROLES (NAME) values ('ADMINISTRATOR');
insert into ROLES (NAME) values ('EXPERIMENTER');
insert into ROLES (NAME) values ('SERVICE_PROVIDER');

ALTER TABLE PERMISSIONS ADD CONSTRAINT PERMISSIONS_FK1 FOREIGN KEY (ROLE_NAME) REFERENCES ROLES (NAME);
ALTER TABLE PERMISSIONS ADD CONSTRAINT PERMISSIONS_FK2 FOREIGN KEY (ACTION_NAME) REFERENCES ACTIONS (NAME);
ALTER TABLE PERMISSIONS ADD CONSTRAINT PERMISSIONS_FK3 FOREIGN KEY (RESOURCEGROUP_NAME) REFERENCES RESOURCEGROUPS (NAME);
ALTER TABLE URN_RESOURCEGROUPS ADD CONSTRAINT URN_RESOURCEGROUPS_FK1 FOREIGN KEY (RESOURCEGROUP) REFERENCES RESOURCEGROUPS (NAME);
ALTER TABLE USERS_ROLES ADD CONSTRAINT USERS_ROLES_FK2 FOREIGN KEY (USER_EMAIL) REFERENCES USERS (EMAIL);
ALTER TABLE USERS_ROLES ADD CONSTRAINT USERS_ROLES_FK3 FOREIGN KEY (ROLE_NAME) REFERENCES ROLES (NAME);
